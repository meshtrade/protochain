// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file protochain/solana/program/token/v1/service.proto (package protochain.solana.program.token.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { SolanaInstruction } from "../../../transaction/v1/instruction_pb";
import { file_protochain_solana_transaction_v1_instruction } from "../../../transaction/v1/instruction_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file protochain/solana/program/token/v1/service.proto.
 */
export const file_protochain_solana_program_token_v1_service: GenFile = /*@__PURE__*/
  fileDesc("CjBwcm90b2NoYWluL3NvbGFuYS9wcm9ncmFtL3Rva2VuL3YxL3NlcnZpY2UucHJvdG8SInByb3RvY2hhaW4uc29sYW5hLnByb2dyYW0udG9rZW4udjEigQEKFUluaXRpYWxpc2VNaW50UmVxdWVzdBIUCgxtaW50X3B1Yl9rZXkYASABKAkSHgoWbWludF9hdXRob3JpdHlfcHViX2tleRgCIAEoCRIgChhmcmVlemVfYXV0aG9yaXR5X3B1Yl9rZXkYAyABKAkSEAoIZGVjaW1hbHMYBCABKA0iYgoWSW5pdGlhbGlzZU1pbnRSZXNwb25zZRJICgtpbnN0cnVjdGlvbhgBIAEoCzIzLnByb3RvY2hhaW4uc29sYW5hLnRyYW5zYWN0aW9uLnYxLlNvbGFuYUluc3RydWN0aW9uIikKJ0dldEN1cnJlbnRNaW5SZW50Rm9yVG9rZW5BY2NvdW50UmVxdWVzdCI8CihHZXRDdXJyZW50TWluUmVudEZvclRva2VuQWNjb3VudFJlc3BvbnNlEhAKCGxhbXBvcnRzGAEgASgEIisKEFBhcnNlTWludFJlcXVlc3QSFwoPYWNjb3VudF9hZGRyZXNzGAEgASgJIk8KEVBhcnNlTWludFJlc3BvbnNlEjoKBG1pbnQYASABKAsyLC5wcm90b2NoYWluLnNvbGFuYS5wcm9ncmFtLnRva2VuLnYxLk1pbnRJbmZvIoYBCghNaW50SW5mbxIeChZtaW50X2F1dGhvcml0eV9wdWJfa2V5GAEgASgJEiAKGGZyZWV6ZV9hdXRob3JpdHlfcHViX2tleRgCIAEoCRIQCghkZWNpbWFscxgDIAEoDRIOCgZzdXBwbHkYBCABKAkSFgoOaXNfaW5pdGlhbGl6ZWQYBSABKAgiMwoSTWVtb1RyYW5zZmVyQ29uZmlnEh0KFXJlcXVpcmVfaW5jb21pbmdfbWVtbxgBIAEoCCK9AQofSW5pdGlhbGlzZUhvbGRpbmdBY2NvdW50UmVxdWVzdBIXCg9hY2NvdW50X3B1Yl9rZXkYASABKAkSFAoMbWludF9wdWJfa2V5GAIgASgJEhUKDW93bmVyX3B1Yl9rZXkYAyABKAkSVAoUbWVtb190cmFuc2Zlcl9jb25maWcYBCABKAsyNi5wcm90b2NoYWluLnNvbGFuYS5wcm9ncmFtLnRva2VuLnYxLk1lbW9UcmFuc2ZlckNvbmZpZyK3AQogSW5pdGlhbGlzZUhvbGRpbmdBY2NvdW50UmVzcG9uc2USSAoLaW5zdHJ1Y3Rpb24YASABKAsyMy5wcm90b2NoYWluLnNvbGFuYS50cmFuc2FjdGlvbi52MS5Tb2xhbmFJbnN0cnVjdGlvbhJJCgxpbnN0cnVjdGlvbnMYAiADKAsyMy5wcm90b2NoYWluLnNvbGFuYS50cmFuc2FjdGlvbi52MS5Tb2xhbmFJbnN0cnVjdGlvbiKBAQopR2V0Q3VycmVudE1pblJlbnRGb3JIb2xkaW5nQWNjb3VudFJlcXVlc3QSVAoUbWVtb190cmFuc2Zlcl9jb25maWcYASABKAsyNi5wcm90b2NoYWluLnNvbGFuYS5wcm9ncmFtLnRva2VuLnYxLk1lbW9UcmFuc2ZlckNvbmZpZyI+CipHZXRDdXJyZW50TWluUmVudEZvckhvbGRpbmdBY2NvdW50UmVzcG9uc2USEAoIbGFtcG9ydHMYASABKAQi5QEKG0NyZWF0ZUhvbGRpbmdBY2NvdW50UmVxdWVzdBINCgVwYXllchgBIAEoCRITCgtuZXdfYWNjb3VudBgCIAEoCRIfChdob2xkaW5nX2FjY291bnRfcHViX2tleRgDIAEoCRIUCgxtaW50X3B1Yl9rZXkYBCABKAkSFQoNb3duZXJfcHViX2tleRgFIAEoCRJUChRtZW1vX3RyYW5zZmVyX2NvbmZpZxgGIAEoCzI2LnByb3RvY2hhaW4uc29sYW5hLnByb2dyYW0udG9rZW4udjEuTWVtb1RyYW5zZmVyQ29uZmlnImkKHENyZWF0ZUhvbGRpbmdBY2NvdW50UmVzcG9uc2USSQoMaW5zdHJ1Y3Rpb25zGAEgAygLMjMucHJvdG9jaGFpbi5zb2xhbmEudHJhbnNhY3Rpb24udjEuU29sYW5hSW5zdHJ1Y3Rpb24ioQEKEUNyZWF0ZU1pbnRSZXF1ZXN0Eg0KBXBheWVyGAEgASgJEhMKC25ld19hY2NvdW50GAIgASgJEhQKDG1pbnRfcHViX2tleRgDIAEoCRIeChZtaW50X2F1dGhvcml0eV9wdWJfa2V5GAQgASgJEiAKGGZyZWV6ZV9hdXRob3JpdHlfcHViX2tleRgFIAEoCRIQCghkZWNpbWFscxgGIAEoDSJfChJDcmVhdGVNaW50UmVzcG9uc2USSQoMaW5zdHJ1Y3Rpb25zGAEgAygLMjMucHJvdG9jaGFpbi5zb2xhbmEudHJhbnNhY3Rpb24udjEuU29sYW5hSW5zdHJ1Y3Rpb24iigEKC01pbnRSZXF1ZXN0EhQKDG1pbnRfcHViX2tleRgBIAEoCRIjChtkZXN0aW5hdGlvbl9hY2NvdW50X3B1Yl9rZXkYAiABKAkSHgoWbWludF9hdXRob3JpdHlfcHViX2tleRgDIAEoCRIOCgZhbW91bnQYBCABKAkSEAoIZGVjaW1hbHMYBSABKA0iWAoMTWludFJlc3BvbnNlEkgKC2luc3RydWN0aW9uGAEgASgLMjMucHJvdG9jaGFpbi5zb2xhbmEudHJhbnNhY3Rpb24udjEuU29sYW5hSW5zdHJ1Y3Rpb24yvwkKB1NlcnZpY2UShwEKDkluaXRpYWxpc2VNaW50EjkucHJvdG9jaGFpbi5zb2xhbmEucHJvZ3JhbS50b2tlbi52MS5Jbml0aWFsaXNlTWludFJlcXVlc3QaOi5wcm90b2NoYWluLnNvbGFuYS5wcm9ncmFtLnRva2VuLnYxLkluaXRpYWxpc2VNaW50UmVzcG9uc2USvQEKIEdldEN1cnJlbnRNaW5SZW50Rm9yVG9rZW5BY2NvdW50EksucHJvdG9jaGFpbi5zb2xhbmEucHJvZ3JhbS50b2tlbi52MS5HZXRDdXJyZW50TWluUmVudEZvclRva2VuQWNjb3VudFJlcXVlc3QaTC5wcm90b2NoYWluLnNvbGFuYS5wcm9ncmFtLnRva2VuLnYxLkdldEN1cnJlbnRNaW5SZW50Rm9yVG9rZW5BY2NvdW50UmVzcG9uc2USeAoJUGFyc2VNaW50EjQucHJvdG9jaGFpbi5zb2xhbmEucHJvZ3JhbS50b2tlbi52MS5QYXJzZU1pbnRSZXF1ZXN0GjUucHJvdG9jaGFpbi5zb2xhbmEucHJvZ3JhbS50b2tlbi52MS5QYXJzZU1pbnRSZXNwb25zZRKlAQoYSW5pdGlhbGlzZUhvbGRpbmdBY2NvdW50EkMucHJvdG9jaGFpbi5zb2xhbmEucHJvZ3JhbS50b2tlbi52MS5Jbml0aWFsaXNlSG9sZGluZ0FjY291bnRSZXF1ZXN0GkQucHJvdG9jaGFpbi5zb2xhbmEucHJvZ3JhbS50b2tlbi52MS5Jbml0aWFsaXNlSG9sZGluZ0FjY291bnRSZXNwb25zZRLDAQoiR2V0Q3VycmVudE1pblJlbnRGb3JIb2xkaW5nQWNjb3VudBJNLnByb3RvY2hhaW4uc29sYW5hLnByb2dyYW0udG9rZW4udjEuR2V0Q3VycmVudE1pblJlbnRGb3JIb2xkaW5nQWNjb3VudFJlcXVlc3QaTi5wcm90b2NoYWluLnNvbGFuYS5wcm9ncmFtLnRva2VuLnYxLkdldEN1cnJlbnRNaW5SZW50Rm9ySG9sZGluZ0FjY291bnRSZXNwb25zZRJ7CgpDcmVhdGVNaW50EjUucHJvdG9jaGFpbi5zb2xhbmEucHJvZ3JhbS50b2tlbi52MS5DcmVhdGVNaW50UmVxdWVzdBo2LnByb3RvY2hhaW4uc29sYW5hLnByb2dyYW0udG9rZW4udjEuQ3JlYXRlTWludFJlc3BvbnNlEpkBChRDcmVhdGVIb2xkaW5nQWNjb3VudBI/LnByb3RvY2hhaW4uc29sYW5hLnByb2dyYW0udG9rZW4udjEuQ3JlYXRlSG9sZGluZ0FjY291bnRSZXF1ZXN0GkAucHJvdG9jaGFpbi5zb2xhbmEucHJvZ3JhbS50b2tlbi52MS5DcmVhdGVIb2xkaW5nQWNjb3VudFJlc3BvbnNlEmkKBE1pbnQSLy5wcm90b2NoYWluLnNvbGFuYS5wcm9ncmFtLnRva2VuLnYxLk1pbnRSZXF1ZXN0GjAucHJvdG9jaGFpbi5zb2xhbmEucHJvZ3JhbS50b2tlbi52MS5NaW50UmVzcG9uc2VCUlpQZ2l0aHViLmNvbS9CUkJ1c3N5L3Byb3RvY2hhaW4vbGliL2dvL3Byb3RvY2hhaW4vc29sYW5hL3Byb2dyYW0vdG9rZW4vdjE7dG9rZW5fdjFiBnByb3RvMw", [file_protochain_solana_transaction_v1_instruction]);

/**
 * Request to create InitialiseMint instruction
 *
 * @generated from message protochain.solana.program.token.v1.InitialiseMintRequest
 */
export type InitialiseMintRequest = Message<"protochain.solana.program.token.v1.InitialiseMintRequest"> & {
  /**
   * @generated from field: string mint_pub_key = 1;
   */
  mintPubKey: string;

  /**
   * @generated from field: string mint_authority_pub_key = 2;
   */
  mintAuthorityPubKey: string;

  /**
   * @generated from field: string freeze_authority_pub_key = 3;
   */
  freezeAuthorityPubKey: string;

  /**
   * @generated from field: uint32 decimals = 4;
   */
  decimals: number;
};

/**
 * Describes the message protochain.solana.program.token.v1.InitialiseMintRequest.
 * Use `create(InitialiseMintRequestSchema)` to create a new message.
 */
export const InitialiseMintRequestSchema: GenMessage<InitialiseMintRequest> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 0);

/**
 * Response containing InitialiseMint instruction
 *
 * @generated from message protochain.solana.program.token.v1.InitialiseMintResponse
 */
export type InitialiseMintResponse = Message<"protochain.solana.program.token.v1.InitialiseMintResponse"> & {
  /**
   * @generated from field: protochain.solana.transaction.v1.SolanaInstruction instruction = 1;
   */
  instruction?: SolanaInstruction;
};

/**
 * Describes the message protochain.solana.program.token.v1.InitialiseMintResponse.
 * Use `create(InitialiseMintResponseSchema)` to create a new message.
 */
export const InitialiseMintResponseSchema: GenMessage<InitialiseMintResponse> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 1);

/**
 * Request to get current rent for token account
 *
 * No parameters needed - uses fixed Mint::LEN size
 *
 * @generated from message protochain.solana.program.token.v1.GetCurrentMinRentForTokenAccountRequest
 */
export type GetCurrentMinRentForTokenAccountRequest = Message<"protochain.solana.program.token.v1.GetCurrentMinRentForTokenAccountRequest"> & {
};

/**
 * Describes the message protochain.solana.program.token.v1.GetCurrentMinRentForTokenAccountRequest.
 * Use `create(GetCurrentMinRentForTokenAccountRequestSchema)` to create a new message.
 */
export const GetCurrentMinRentForTokenAccountRequestSchema: GenMessage<GetCurrentMinRentForTokenAccountRequest> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 2);

/**
 * Response with current rent amount
 *
 * @generated from message protochain.solana.program.token.v1.GetCurrentMinRentForTokenAccountResponse
 */
export type GetCurrentMinRentForTokenAccountResponse = Message<"protochain.solana.program.token.v1.GetCurrentMinRentForTokenAccountResponse"> & {
  /**
   * @generated from field: uint64 lamports = 1;
   */
  lamports: bigint;
};

/**
 * Describes the message protochain.solana.program.token.v1.GetCurrentMinRentForTokenAccountResponse.
 * Use `create(GetCurrentMinRentForTokenAccountResponseSchema)` to create a new message.
 */
export const GetCurrentMinRentForTokenAccountResponseSchema: GenMessage<GetCurrentMinRentForTokenAccountResponse> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 3);

/**
 * Request to parse mint account
 *
 * @generated from message protochain.solana.program.token.v1.ParseMintRequest
 */
export type ParseMintRequest = Message<"protochain.solana.program.token.v1.ParseMintRequest"> & {
  /**
   * @generated from field: string account_address = 1;
   */
  accountAddress: string;
};

/**
 * Describes the message protochain.solana.program.token.v1.ParseMintRequest.
 * Use `create(ParseMintRequestSchema)` to create a new message.
 */
export const ParseMintRequestSchema: GenMessage<ParseMintRequest> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 4);

/**
 * Response with parsed mint data
 *
 * @generated from message protochain.solana.program.token.v1.ParseMintResponse
 */
export type ParseMintResponse = Message<"protochain.solana.program.token.v1.ParseMintResponse"> & {
  /**
   * @generated from field: protochain.solana.program.token.v1.MintInfo mint = 1;
   */
  mint?: MintInfo;
};

/**
 * Describes the message protochain.solana.program.token.v1.ParseMintResponse.
 * Use `create(ParseMintResponseSchema)` to create a new message.
 */
export const ParseMintResponseSchema: GenMessage<ParseMintResponse> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 5);

/**
 * Structured mint account information
 *
 * @generated from message protochain.solana.program.token.v1.MintInfo
 */
export type MintInfo = Message<"protochain.solana.program.token.v1.MintInfo"> & {
  /**
   * @generated from field: string mint_authority_pub_key = 1;
   */
  mintAuthorityPubKey: string;

  /**
   * @generated from field: string freeze_authority_pub_key = 2;
   */
  freezeAuthorityPubKey: string;

  /**
   * @generated from field: uint32 decimals = 3;
   */
  decimals: number;

  /**
   * @generated from field: string supply = 4;
   */
  supply: string;

  /**
   * @generated from field: bool is_initialized = 5;
   */
  isInitialized: boolean;
};

/**
 * Describes the message protochain.solana.program.token.v1.MintInfo.
 * Use `create(MintInfoSchema)` to create a new message.
 */
export const MintInfoSchema: GenMessage<MintInfo> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 6);

/**
 * @generated from message protochain.solana.program.token.v1.MemoTransferConfig
 */
export type MemoTransferConfig = Message<"protochain.solana.program.token.v1.MemoTransferConfig"> & {
  /**
   * Require every inbound transfer into the account to include a memo.
   *
   * @generated from field: bool require_incoming_memo = 1;
   */
  requireIncomingMemo: boolean;
};

/**
 * Describes the message protochain.solana.program.token.v1.MemoTransferConfig.
 * Use `create(MemoTransferConfigSchema)` to create a new message.
 */
export const MemoTransferConfigSchema: GenMessage<MemoTransferConfig> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 7);

/**
 * Request to create InitialiseHoldingAccount instruction
 *
 * @generated from message protochain.solana.program.token.v1.InitialiseHoldingAccountRequest
 */
export type InitialiseHoldingAccountRequest = Message<"protochain.solana.program.token.v1.InitialiseHoldingAccountRequest"> & {
  /**
   * @generated from field: string account_pub_key = 1;
   */
  accountPubKey: string;

  /**
   * @generated from field: string mint_pub_key = 2;
   */
  mintPubKey: string;

  /**
   * @generated from field: string owner_pub_key = 3;
   */
  ownerPubKey: string;

  /**
   * optional, defaults to false
   *
   * @generated from field: protochain.solana.program.token.v1.MemoTransferConfig memo_transfer_config = 4;
   */
  memoTransferConfig?: MemoTransferConfig;
};

/**
 * Describes the message protochain.solana.program.token.v1.InitialiseHoldingAccountRequest.
 * Use `create(InitialiseHoldingAccountRequestSchema)` to create a new message.
 */
export const InitialiseHoldingAccountRequestSchema: GenMessage<InitialiseHoldingAccountRequest> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 8);

/**
 * Response containing InitialiseHoldingAccount instruction
 *
 * @generated from message protochain.solana.program.token.v1.InitialiseHoldingAccountResponse
 */
export type InitialiseHoldingAccountResponse = Message<"protochain.solana.program.token.v1.InitialiseHoldingAccountResponse"> & {
  /**
   * legacy single instruction
   *
   * @generated from field: protochain.solana.transaction.v1.SolanaInstruction instruction = 1;
   */
  instruction?: SolanaInstruction;

  /**
   * canonical list, includes memo enable when requested
   *
   * @generated from field: repeated protochain.solana.transaction.v1.SolanaInstruction instructions = 2;
   */
  instructions: SolanaInstruction[];
};

/**
 * Describes the message protochain.solana.program.token.v1.InitialiseHoldingAccountResponse.
 * Use `create(InitialiseHoldingAccountResponseSchema)` to create a new message.
 */
export const InitialiseHoldingAccountResponseSchema: GenMessage<InitialiseHoldingAccountResponse> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 9);

/**
 * Request to get current rent for holding account
 *
 * @generated from message protochain.solana.program.token.v1.GetCurrentMinRentForHoldingAccountRequest
 */
export type GetCurrentMinRentForHoldingAccountRequest = Message<"protochain.solana.program.token.v1.GetCurrentMinRentForHoldingAccountRequest"> & {
  /**
   * optional, defaults to false
   *
   * @generated from field: protochain.solana.program.token.v1.MemoTransferConfig memo_transfer_config = 1;
   */
  memoTransferConfig?: MemoTransferConfig;
};

/**
 * Describes the message protochain.solana.program.token.v1.GetCurrentMinRentForHoldingAccountRequest.
 * Use `create(GetCurrentMinRentForHoldingAccountRequestSchema)` to create a new message.
 */
export const GetCurrentMinRentForHoldingAccountRequestSchema: GenMessage<GetCurrentMinRentForHoldingAccountRequest> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 10);

/**
 * Response with current rent amount for holding account
 *
 * @generated from message protochain.solana.program.token.v1.GetCurrentMinRentForHoldingAccountResponse
 */
export type GetCurrentMinRentForHoldingAccountResponse = Message<"protochain.solana.program.token.v1.GetCurrentMinRentForHoldingAccountResponse"> & {
  /**
   * @generated from field: uint64 lamports = 1;
   */
  lamports: bigint;
};

/**
 * Describes the message protochain.solana.program.token.v1.GetCurrentMinRentForHoldingAccountResponse.
 * Use `create(GetCurrentMinRentForHoldingAccountResponseSchema)` to create a new message.
 */
export const GetCurrentMinRentForHoldingAccountResponseSchema: GenMessage<GetCurrentMinRentForHoldingAccountResponse> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 11);

/**
 * Request to create and initialize a holding account in one call  
 *
 * @generated from message protochain.solana.program.token.v1.CreateHoldingAccountRequest
 */
export type CreateHoldingAccountRequest = Message<"protochain.solana.program.token.v1.CreateHoldingAccountRequest"> & {
  /**
   * System program create fields
   *
   * Account paying for creation (signer)
   *
   * @generated from field: string payer = 1;
   */
  payer: string;

  /**
   * Holding account to create (signer)
   *
   * @generated from field: string new_account = 2;
   */
  newAccount: string;

  /**
   * Token program initialize holding account fields
   *
   * Same as new_account for validation
   *
   * @generated from field: string holding_account_pub_key = 3;
   */
  holdingAccountPubKey: string;

  /**
   * Mint this account will hold
   *
   * @generated from field: string mint_pub_key = 4;
   */
  mintPubKey: string;

  /**
   * Owner of the holding account
   *
   * @generated from field: string owner_pub_key = 5;
   */
  ownerPubKey: string;

  /**
   * optional, defaults to false
   *
   * @generated from field: protochain.solana.program.token.v1.MemoTransferConfig memo_transfer_config = 6;
   */
  memoTransferConfig?: MemoTransferConfig;
};

/**
 * Describes the message protochain.solana.program.token.v1.CreateHoldingAccountRequest.
 * Use `create(CreateHoldingAccountRequestSchema)` to create a new message.
 */
export const CreateHoldingAccountRequestSchema: GenMessage<CreateHoldingAccountRequest> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 12);

/**
 * Response containing both create and initialize instructions
 *
 * @generated from message protochain.solana.program.token.v1.CreateHoldingAccountResponse
 */
export type CreateHoldingAccountResponse = Message<"protochain.solana.program.token.v1.CreateHoldingAccountResponse"> & {
  /**
   * @generated from field: repeated protochain.solana.transaction.v1.SolanaInstruction instructions = 1;
   */
  instructions: SolanaInstruction[];
};

/**
 * Describes the message protochain.solana.program.token.v1.CreateHoldingAccountResponse.
 * Use `create(CreateHoldingAccountResponseSchema)` to create a new message.
 */
export const CreateHoldingAccountResponseSchema: GenMessage<CreateHoldingAccountResponse> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 13);

/**
 * Request to create and initialize a mint account in one call
 *
 * @generated from message protochain.solana.program.token.v1.CreateMintRequest
 */
export type CreateMintRequest = Message<"protochain.solana.program.token.v1.CreateMintRequest"> & {
  /**
   * System program create fields
   *
   * Account paying for creation (signer)
   *
   * @generated from field: string payer = 1;
   */
  payer: string;

  /**
   * Mint account to create (signer)
   *
   * @generated from field: string new_account = 2;
   */
  newAccount: string;

  /**
   * Token program initialize mint fields  
   *
   * Same as new_account for validation
   *
   * @generated from field: string mint_pub_key = 3;
   */
  mintPubKey: string;

  /**
   * Mint authority 
   *
   * @generated from field: string mint_authority_pub_key = 4;
   */
  mintAuthorityPubKey: string;

  /**
   * Freeze authority (optional)
   *
   * @generated from field: string freeze_authority_pub_key = 5;
   */
  freezeAuthorityPubKey: string;

  /**
   * Mint decimals
   *
   * @generated from field: uint32 decimals = 6;
   */
  decimals: number;
};

/**
 * Describes the message protochain.solana.program.token.v1.CreateMintRequest.
 * Use `create(CreateMintRequestSchema)` to create a new message.
 */
export const CreateMintRequestSchema: GenMessage<CreateMintRequest> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 14);

/**
 * Response containing both create and initialize instructions
 *
 * @generated from message protochain.solana.program.token.v1.CreateMintResponse
 */
export type CreateMintResponse = Message<"protochain.solana.program.token.v1.CreateMintResponse"> & {
  /**
   * @generated from field: repeated protochain.solana.transaction.v1.SolanaInstruction instructions = 1;
   */
  instructions: SolanaInstruction[];
};

/**
 * Describes the message protochain.solana.program.token.v1.CreateMintResponse.
 * Use `create(CreateMintResponseSchema)` to create a new message.
 */
export const CreateMintResponseSchema: GenMessage<CreateMintResponse> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 15);

/**
 * Request to mint tokens to a token account
 *
 * @generated from message protochain.solana.program.token.v1.MintRequest
 */
export type MintRequest = Message<"protochain.solana.program.token.v1.MintRequest"> & {
  /**
   * The mint to mint from
   *
   * @generated from field: string mint_pub_key = 1;
   */
  mintPubKey: string;

  /**
   * Token account to mint to
   *
   * @generated from field: string destination_account_pub_key = 2;
   */
  destinationAccountPubKey: string;

  /**
   * Authority that can mint tokens
   *
   * @generated from field: string mint_authority_pub_key = 3;
   */
  mintAuthorityPubKey: string;

  /**
   * Amount to mint (as string to handle large numbers)
   *
   * @generated from field: string amount = 4;
   */
  amount: string;

  /**
   * Expected decimals for validation
   *
   * @generated from field: uint32 decimals = 5;
   */
  decimals: number;
};

/**
 * Describes the message protochain.solana.program.token.v1.MintRequest.
 * Use `create(MintRequestSchema)` to create a new message.
 */
export const MintRequestSchema: GenMessage<MintRequest> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 16);

/**
 * Response containing Mint instruction
 *
 * @generated from message protochain.solana.program.token.v1.MintResponse
 */
export type MintResponse = Message<"protochain.solana.program.token.v1.MintResponse"> & {
  /**
   * @generated from field: protochain.solana.transaction.v1.SolanaInstruction instruction = 1;
   */
  instruction?: SolanaInstruction;
};

/**
 * Describes the message protochain.solana.program.token.v1.MintResponse.
 * Use `create(MintResponseSchema)` to create a new message.
 */
export const MintResponseSchema: GenMessage<MintResponse> = /*@__PURE__*/
  messageDesc(file_protochain_solana_program_token_v1_service, 17);

/**
 * Token Program service for creating SPL Token 2022 instructions
 *
 * @generated from service protochain.solana.program.token.v1.Service
 */
export const Service: GenService<{
  /**
   * Creates an InitialiseMint instruction for Token 2022 program
   *
   * @generated from rpc protochain.solana.program.token.v1.Service.InitialiseMint
   */
  initialiseMint: {
    methodKind: "unary";
    input: typeof InitialiseMintRequestSchema;
    output: typeof InitialiseMintResponseSchema;
  },
  /**
   * Gets current minimum rent for a token account (mint size)
   *
   * @generated from rpc protochain.solana.program.token.v1.Service.GetCurrentMinRentForTokenAccount
   */
  getCurrentMinRentForTokenAccount: {
    methodKind: "unary";
    input: typeof GetCurrentMinRentForTokenAccountRequestSchema;
    output: typeof GetCurrentMinRentForTokenAccountResponseSchema;
  },
  /**
   * Parses mint account data into structured format
   *
   * @generated from rpc protochain.solana.program.token.v1.Service.ParseMint
   */
  parseMint: {
    methodKind: "unary";
    input: typeof ParseMintRequestSchema;
    output: typeof ParseMintResponseSchema;
  },
  /**
   * Creates an InitialiseHoldingAccount instruction for Token 2022 program. When memo_transfer_config.require_incoming_memo is true, returns both initialise and memo-enable instructions.
   *
   * @generated from rpc protochain.solana.program.token.v1.Service.InitialiseHoldingAccount
   */
  initialiseHoldingAccount: {
    methodKind: "unary";
    input: typeof InitialiseHoldingAccountRequestSchema;
    output: typeof InitialiseHoldingAccountResponseSchema;
  },
  /**
   * Gets current minimum rent for a token holding account, optionally accounting for memo transfer extension size when memo_transfer_config is provided.
   *
   * @generated from rpc protochain.solana.program.token.v1.Service.GetCurrentMinRentForHoldingAccount
   */
  getCurrentMinRentForHoldingAccount: {
    methodKind: "unary";
    input: typeof GetCurrentMinRentForHoldingAccountRequestSchema;
    output: typeof GetCurrentMinRentForHoldingAccountResponseSchema;
  },
  /**
   * Creates both system account creation and mint initialization instructions. Memo transfer is not applicable to mint accounts.
   *
   * @generated from rpc protochain.solana.program.token.v1.Service.CreateMint
   */
  createMint: {
    methodKind: "unary";
    input: typeof CreateMintRequestSchema;
    output: typeof CreateMintResponseSchema;
  },
  /**
   * Creates both system account creation and holding account initialization instructions. Adds memo-enable instruction when requested.
   *
   * @generated from rpc protochain.solana.program.token.v1.Service.CreateHoldingAccount
   */
  createHoldingAccount: {
    methodKind: "unary";
    input: typeof CreateHoldingAccountRequestSchema;
    output: typeof CreateHoldingAccountResponseSchema;
  },
  /**
   * Mint tokens to an existing token account using MintToChecked instruction
   *
   * @generated from rpc protochain.solana.program.token.v1.Service.Mint
   */
  mint: {
    methodKind: "unary";
    input: typeof MintRequestSchema;
    output: typeof MintResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_protochain_solana_program_token_v1_service, 0);

